AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: For aws training - week 6
Parameters:
  CloudWatchEventRoleName:
    Description: CloudWatch Event Role Name
    Default: yyl-week6-scheduled-rule
    Type: String
  AlarmEmail: 
    Default: "plin005@163.com"
    Description: "Email address to notify the scheduled events"
    Type: "String"
  SNSTopicName:
    Description: SNS Topic Name
    Default: yyl-week6-alarm-sns-topic
    Type: String
  MessageQueueName:
    Description: My Message Queue Name
    Default: yyl-week6-message-queue
    Type: String
  DeadLetterQueueName:
    Description: My Dead Letter Queue Name
    Default: yyl-week6-dead-letter-queue
    Type: String
  LambdaFunctionName:
    Description: Lambda Function Name
    Default: yyl-week6-lambda-function-001
    Type: String
  LambdaRoleName:
    Description: Lambda Role Name
    Default: yyl-week6-lambda-role
    Type: String
  LambdaPolicyForLogName:
    Description: Lambda Policy for Log Name
    Default: yyl-week6-lambda-policy-log
    Type: String
  LambdaPolicyForSQSName:
    Description: Lambda Policy for SQS Name
    Default: yyl-week6-lambda-policy-sqs
    Type: String
  LambdaPolicyForCloudWatchName:
    Description: Policy Name
    Default: yyl-week6-lambda-policy-cloudWatch
    Type: String
  
  
  # LambdaMetricsAlarmName:
  #   Description: Lambda Metrics Alarm Name
  #   Default: yyl-week6-alarm-sns-topic
  #   Type: String
  # CloudWatchMetricsNamespaceName:
  #   Description: CloudWatch Metrics Namespace Name
  #   Type: String
  #   Default: yyl-week6-cloudWatch-metrics-namespace
  # LambdaMetricName:
  #   Description: CloudWatch Metric Name
  #   Type: String
  #   Default: metrics-for-lambda
  
  

Resources:
  CloudWatchEventRole:
    Type: AWS::Events::Rule
    Properties: 
      Name: !Ref CloudWatchEventRoleName
      Description: ScheduledRule in CloudWatch Event to trigger SNS Topic
      ScheduleExpression: rate(5 minutes)
      State: ENABLED
      Targets: 
        - Arn: !Ref MySNSTopic
          Id: !Ref SNSTopicName  
        
  MySNSTopic:
    Type: AWS::SNS::Topic
    Properties: 
      TopicName: !Ref SNSTopicName
      Subscription:
        - Endpoint: !Ref AlarmEmail
          Protocol: email
        - Endpoint: !GetAtt MyMessageQueue.Arn
          Protocol: sqs
    
  MyMessageQueue:
    Type: AWS::SQS::Queue
    Properties: 
      # Unknown Attribute ContentBasedDeduplication. (Service: AmazonSQS; Status Code: 400; Error Code: InvalidAttributeName; Request ID: acabe6d7-4f40-5827-9e9a-b1bd5e5dfb77)
      # ContentBasedDeduplication: true
      # The name of a FIFO queue can only include alphanumeric characters, hyphens, or underscores, must end with .fifo suffix and be 1 to 80 in length. (Service: AmazonSQS; Status Code: 400; Error Code: InvalidParameterValue; Request ID: bb45399d-60d6-5089-a90b-6ef76f24ec08)
      # FifoQueue: true
      # KmsDataKeyReusePeriodSeconds: 300
      # KmsMasterKeyId: String
      # MaximumMessageSize: Integer
      # 保留消息7天(=60*60*24*7)
      MessageRetentionPeriod: 604800
      QueueName: !Ref MessageQueueName
      # ReceiveMessageWaitTimeSeconds: Integer
      RedrivePolicy:
        # 在超出 maxReceiveCount 值后，Amazon SQS 将消息移动到 deadletterQueue
        deadLetterTargetArn: !GetAtt MyDeadLetterQueue.Arn
        # deadletterQueue最大可接收来自SQS的Message
        maxReceiveCount: 1
      # 消息将不可用的时间长度为5分钟
      VisibilityTimeout: 300
  
  MyDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref DeadLetterQueueName

  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: !Sub /aws/lambda/${LambdaFunctionName}
      RetentionInDays: 7

  MyLambda:
    Type: AWS::Serverless::Function
    DependsOn:
      - LambdaLogGroup
    Properties:
      FunctionName: !Ref LambdaFunctionName
      Role: !GetAtt LambdaRole.Arn
      Handler: index.handler
      Runtime: nodejs12.x
      CodeUri: ../../output/
      MemorySize: 128
      Timeout: 3     

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref LambdaRoleName
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Ref LambdaPolicyForLogName
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:log-group:/aws/lambda/*:*
        # - PolicyName: !Ref LambdaPolicyForCloudWatchName
        #   PolicyDocument:
        #     Version: 2012-10-17
        #     Statement:
        #       - Effect: Allow
        #         Action:
        #           - cloudwatch:PutMetricData
        #         Resource: "*"
        - PolicyName: !Ref LambdaPolicyForSQSName
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                Resource: !GetAtt MyMessageQueue.Arn
  
  LambdaEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties: 
      # SQS单个批次中检索的最大项目数: 默认值为 10, 最大值为 10。
      # BatchSize: 10
      # BisectBatchOnFunctionError: Boolean
      # DestinationConfig: 
      #   DestinationConfig
      # Enabled: Boolean
      EventSourceArn: !GetAtt MyMessageQueue.Arn
      FunctionName: !Ref MyLambda
      # MaximumBatchingWindowInSeconds: Integer
      # MaximumRecordAgeInSeconds: Integer
      # MaximumRetryAttempts: Integer
      # ParallelizationFactor: Integer
      # StartingPosition: String
  
  # PermissionForSQSToInvokeLambda: 
  #   Type: AWS::Lambda::Permission
  #   Properties: 
  #     FunctionName: !GetAtt MyLambda.Arn
  #     Action: lambda:InvokeFunction
  #     Principal: sqs.amazonaws.com
  #     SourceArn: !GetAtt MyMessageQueue.Arn

  # CloudWatchAlarm:
  #   Type: AWS::CloudWatch::Alarm
  #   DependsOn:
  #     - SNSTopic
  #   Properties:
  #     AlarmActions:
  #       - !Ref SNSTopic
  #     AlarmDescription: Lambda Invoke
  #     AlarmName: !Ref LambdaMetricsAlarmName
  #     ComparisonOperator: GreaterThanOrEqualToThreshold
  #     Threshold: 2
  #     Statistic: Sum
  #     #应用统计数据的周期为60s
  #     Period: 300
  #     #每次评估时长为多少个Period, 每次评估时间为: Period * EvaluationPeriods
  #     EvaluationPeriods: 1
  #     MetricName: !Ref LambdaMetricName
  #     Namespace: !Ref CloudWatchMetricsNamespaceName
  #     #与警报关联的指标的维度。
  #     Dimensions:
  #       - Name: hello_world
  #         Value: Hello World!
      